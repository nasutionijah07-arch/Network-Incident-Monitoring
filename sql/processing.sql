-- FACT_EVENT_TRANSCRIPTS
-- Convert EPOCH time to date time -> by replacing original cols
SELECT * FROM HACKATHON.DATAMART.FACT_EVENT_TRANSCRIPTS LIMIT 10;

-- Add a temporary TIMESTAMP column
ALTER TABLE HACKATHON.DATAMART.FACT_EVENT_TRANSCRIPTS
ADD COLUMN TIMESTAMP_1H_NEW TIMESTAMP_NTZ;

-- Convert from nanoseconds to timestamp
UPDATE HACKATHON.DATAMART.FACT_EVENT_TRANSCRIPTS
SET TIMESTAMP_1H_NEW = TO_TIMESTAMP_NTZ("TIMESTAMP_1H"::NUMBER / 1000000000);

-- Drop the old nanosecond column
ALTER TABLE HACKATHON.DATAMART.FACT_EVENT_TRANSCRIPTS
DROP COLUMN "TIMESTAMP_1H";

-- Rename the new column to replace the old one
ALTER TABLE HACKATHON.DATAMART.FACT_EVENT_TRANSCRIPTS
RENAME COLUMN TIMESTAMP_1H_NEW TO "TIMESTAMP_1H";

-- FACT_CUSTOMER_FEEDBACK
-- Convert EPOCH time to date time -> by replacing original cols
SELECT * FROM HACKATHON.DATAMART.FACT_CUSTOMER_FEEDBACK LIMIT 10;

-- Add a temporary TIMESTAMP column
ALTER TABLE HACKATHON.DATAMART.FACT_CUSTOMER_FEEDBACK
ADD COLUMN 
    JOIN_DATE_NEW TIMESTAMP_NTZ,
    ACTIVE_DATE_NEW TIMESTAMP_NTZ,
    LAST_ONLINE_NEW TIMESTAMP_NTZ,
    LAST_OFFLINE_NEW TIMESTAMP_NTZ;

-- Convert from nanoseconds to timestamp
UPDATE HACKATHON.DATAMART.FACT_CUSTOMER_FEEDBACK
SET 
    JOIN_DATE_NEW = TO_TIMESTAMP_NTZ("JOIN_DATE"::NUMBER / 1000000000),
    ACTIVE_DATE_NEW = TO_TIMESTAMP_NTZ("ACTIVE_DATE"::NUMBER / 1000000000),
    LAST_ONLINE_NEW = TO_TIMESTAMP_NTZ("LAST_ONLINE_TS"::NUMBER / 1000000000),
    LAST_OFFLINE_NEW = TO_TIMESTAMP_NTZ("LAST_OFFLINE_TS"::NUMBER / 1000000000);

-- Drop the old nanosecond column
ALTER TABLE HACKATHON.DATAMART.FACT_CUSTOMER_FEEDBACK
DROP COLUMN 
    "JOIN_DATE",
    "ACTIVE_DATE",
    "LAST_ONLINE_TS",
    "LAST_OFFLINE_TS";

-- Rename the new column to replace the old one
ALTER TABLE HACKATHON.DATAMART.FACT_CUSTOMER_FEEDBACK RENAME COLUMN JOIN_DATE_NEW TO "JOIN_DATE";
ALTER TABLE HACKATHON.DATAMART.FACT_CUSTOMER_FEEDBACK RENAME COLUMN ACTIVE_DATE_NEW TO "ACTIVE_DATE";
ALTER TABLE HACKATHON.DATAMART.FACT_CUSTOMER_FEEDBACK RENAME COLUMN LAST_ONLINE_NEW TO "LAST_ONLINE_TS";
ALTER TABLE HACKATHON.DATAMART.FACT_CUSTOMER_FEEDBACK RENAME COLUMN LAST_OFFLINE_NEW TO "LAST_OFFLINE_TS";


-- FACT_INCIDENT_TREND_SUMMARY
-- Convert EPOCH time to date time -> by replacing original cols
SELECT * FROM HACKATHON.DATAMART.FACT_INCIDENT_TREND_SUMMARY LIMIT 10;

-- Add a temporary TIMESTAMP column
ALTER TABLE HACKATHON.DATAMART.FACT_INCIDENT_TREND_SUMMARY
ADD COLUMN DATE_NEW TIMESTAMP_NTZ;

-- Convert from nanoseconds to timestamp
UPDATE HACKATHON.DATAMART.FACT_INCIDENT_TREND_SUMMARY
SET DATE_NEW = TO_TIMESTAMP_NTZ("DATE"::NUMBER / 1000000000);

-- Drop the old nanosecond column
ALTER TABLE HACKATHON.DATAMART.FACT_INCIDENT_TREND_SUMMARY
DROP COLUMN "DATE";

-- Rename the new column to replace the old one
ALTER TABLE HACKATHON.DATAMART.FACT_INCIDENT_TREND_SUMMARY
RENAME COLUMN DATE_NEW TO "DATE";

-- FACT_ML_FEATURES
-- Convert EPOCH time to date time -> by replacing original cols
SELECT * FROM HACKATHON.DATAMART.FACT_ML_FEATURES LIMIT 10;

-- Add a temporary TIMESTAMP column
ALTER TABLE HACKATHON.DATAMART.FACT_ML_FEATURES
ADD COLUMN TIMESTAMP_1H_NEW TIMESTAMP_NTZ;

-- Convert from nanoseconds to timestamp
UPDATE HACKATHON.DATAMART.FACT_ML_FEATURES
SET TIMESTAMP_1H_NEW = TO_TIMESTAMP_NTZ("TIMESTAMP_1H"::NUMBER / 1000000000);

-- Drop the old nanosecond column
ALTER TABLE HACKATHON.DATAMART.FACT_ML_FEATURES
DROP COLUMN "TIMESTAMP_1H";

-- Rename the new column to replace the old one
ALTER TABLE HACKATHON.DATAMART.FACT_ML_FEATURES
RENAME COLUMN TIMESTAMP_1H_NEW TO "TIMESTAMP_1H";


-- FACT_ONT_STATUS
-- Convert EPOCH time to date time -> by replacing original cols
SELECT * FROM HACKATHON.DATAMART.FACT_ONT_STATUS LIMIT 10;

-- Add a temporary TIMESTAMP column
ALTER TABLE HACKATHON.DATAMART.FACT_ONT_STATUS
ADD COLUMN 
    TIMESTAMP_1H_NEW TIMESTAMP_NTZ,
    DATE_NEW TIMESTAMP_NTZ;

-- Convert from nanoseconds to timestamp
UPDATE HACKATHON.DATAMART.FACT_ONT_STATUS
SET 
    TIMESTAMP_1H_NEW = TO_TIMESTAMP_NTZ("TIMESTAMP_1H"::NUMBER / 1000000000),
    DATE_NEW = TO_TIMESTAMP_NTZ("DATE"::NUMBER / 1000000000);

-- Drop the old nanosecond column
ALTER TABLE HACKATHON.DATAMART.FACT_ONT_STATUS
DROP COLUMN 
    "TIMESTAMP_1H",
    "DATE";

-- Rename the new column to replace the old one
ALTER TABLE HACKATHON.DATAMART.FACT_ONT_STATUS RENAME COLUMN TIMESTAMP_1H_NEW TO "TIMESTAMP_1H";
ALTER TABLE HACKATHON.DATAMART.FACT_ONT_STATUS RENAME COLUMN DATE_NEW TO "DATE";


-- FACT_TICKET_SUMMARY
-- Convert EPOCH time to date time -> by replacing original cols
SELECT * FROM HACKATHON.DATAMART.FACT_TICKET_SUMMARY LIMIT 10;

-- Add a temporary TIMESTAMP column
ALTER TABLE HACKATHON.DATAMART.FACT_TICKET_SUMMARY
ADD COLUMN DATE_NEW TIMESTAMP_NTZ;

-- Convert from nanoseconds to timestamp
UPDATE HACKATHON.DATAMART.FACT_TICKET_SUMMARY
SET DATE_NEW = TO_TIMESTAMP_NTZ("DATE"::NUMBER / 1000000000);

-- Drop the old nanosecond column
ALTER TABLE HACKATHON.DATAMART.FACT_TICKET_SUMMARY
DROP COLUMN "DATE";

-- Rename the new column to replace the old one
ALTER TABLE HACKATHON.DATAMART.FACT_TICKET_SUMMARY
RENAME COLUMN DATE_NEW TO "DATE";
